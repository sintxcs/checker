author = 's1n'
tgChannel = 't.me/mksln'
website = 'https://sin-codmchecker.giize.com/'

import base64 as bbcMdId
bfkpU0bRouXEToE = 'emxpYg=='
gFTX6OAitcvdqvM = 'Q3J5cHRvLkNpcGhlcg=='
alccQtZmcO0YBZ9ICA = 'QUVT'
KbCjzGTNjBLP7yQ = 'c3lz'
FqcYSOT38XS_f_yZVJ = __import__(bbcMdId.b64decode(bfkpU0bRouXEToE).decode('utf-8'))
KzWyaf9Kq7E7iGXs = __import__(bbcMdId.b64decode(KbCjzGTNjBLP7yQ).decode('utf-8'))
try:
    MLWPohEaqxHVfPVh = __import__(bbcMdId.b64decode(gFTX6OAitcvdqvM).decode('utf-8'), fromlist=[bbcMdId.b64decode(alccQtZmcO0YBZ9ICA).decode('utf-8')])
    HzgRKo96 = getattr(MLWPohEaqxHVfPVh, bbcMdId.b64decode(alccQtZmcO0YBZ9ICA).decode('utf-8'))
except Exception:
    HzgRKo96 = None
MS2uxHjEA7Ue1V = 'czFu'
mim93ucwjsL = 'dC5tZS9ta3Nsbg=='
hDfMww7GHEIqK = 'aHR0cHM6Ly9zaW4tY29kbWNoZWNrZXIuZ2lpemUuY29tLw=='
aKYA6OXqCLWb = 'ZDdpQ08rOFhSNEdHNlQ1NE0yU2JGYzA3MVM3R09pUlphaHdCcE4rNzAzVmNlWGMvZmFjNmRZcUhpeWpUS0ZsK3BwbmFmVnNlRXVhWGZHRHBVc2xxcWpMcDM1SW9PL09aUnI0MHZOTUVuTEZiTm94MDZtNkxoVGhwNFNzNDNvajQ0cU1rT2RNbFo5VmczYUFCYU14dUc1Zk0wZGtGQ29nUkFJUWdwM0xaUkc0d2VTWWhrM2FZSFdYa3EyRDAvYkZrcHZOdENDd2ozMDZvT3J6LzhwZWc5M1dsL3JKZFBqZHN3K0tDdWVwck9xdDRSSnNhQm9wcUR6SXBPeTVzQ1BxbTI2M0k0VHExaUZVNitnNWtrVDZwRjVzSStzdlpyT1F6UDRNL3laai9KSnNxMEtHYTRoRHJTZ0xXRER4VDF2WVZhQlZ1Nng0d0JpWWYyeEx5T01neU1WdkN6MnRFNUI0RW9yaFpzREpnZndmTXdZRHhXV1JtaFc1QktqcmxNTmQrZXZqaHFaU0dKZ0x0UEJUSlVkQWJMOUIzWGpkRGJtaUNHTk8ycHhaNFZOdlpVdE4xcjl2Njl4ejNzbnBZUDhGSjBLbjJMNWZmTnh0bU9taWl1WkwyVjdRd1V6Rzh1ZFhQUGVFL0ZwS294ajhsVmd6M0NvMEtDeTR0OEVOUWhXdmxwdFRXeEVsYnRWUHF3MkJWSkVaMEY3Qndyd3hva1c5WFVtU0hQSjBCYkNEc0NUQnloNkZxVXEzVHdBSXlmb0VNQUlmQlBNRkljSnVOcVFUYThrODcwaGljQ1BldmFlMFE0S2hGQytBalg5RDVQNjQ1NVRGSHBibWZrc2VFNVZyNzNkQlJUM1haTG9LU3d3ZDBzTEJyNjRtK1UrTXpZaEhSQUtOaDVzczBKc2xpZFprbTQ0c1gvSC9HY1NVYjNrcGxVSTJTWmdJMVVsYklVMVdzcUN0TDdjRDh5eVZacEMxbk5PK2NibUhUZDQ3aWhYOVdPN0pFWEpmQ2k1bTg4QTdYcVlOeWNCd1kyOE4zTnJlY3ljTU80bkcxTituVWNrbVpCd3NRYldFNkVUa2NaNFZhVmZVOFY5aGdWdHdXN1dsTUMxek13UURHcDFNNFl6bHRRbkNENjdaWWUrb0ZwdVYvampzYWhKbFAvRm54a1dKSDZDV2FUeGNyTEhmdXFOb0dOZHRYQkZQUHI0ZGNybG1VelR5dU5GOFREOGZsZlk1amJxaDR2TWJmakJpd2xDVThmZkJ3M0dqSFRQR28rdVp0OWZaVmpNcFM4dHMrc3FrNmFRWFFtaUh1UTlPS1dFSVd1N1EwRUNTblZ1bTg1UXJEdnZYbVhWQ2ZuUU9PcUJxRmJITzJIUTBPNzJhN2QvRVczcWhZSElXWnRnNi9UbFB1Y3ozMjUrVW5nWk5QN240azdSL0lwRzRqT3B2QytPS25ZckNxa1ZwRzBPbWVlRlFOeTJNSHFXWE9qV055VGtMZFVkNy82SkxBVXhaLy9RZW1VK3FXUUJNTlpkSzZCZCtoSnhMZFZuWW8wYk1Lc0NYQWVzKzdoMko3c2tnaVVHMDA5alp4R0FISjd5V1RvNzRaekkyMEo1cW5pdUlPL3RlTUNqd2tkL3JzY2pWNFY4bW1JRDRnbmVaM3VMbzliVVNYaDAyWHh5ckViNlNIWU1qUjlVeXlyQTNzcE5Xam80a2N3MSs3RzFwcDhyVzI5NG9taGFjaStERlczbDdYSGg2bCsyMHpSVnZQdmtOT21hVEFYYldLWVZTb2toVElqMStxd2hxVE9VLzVKcnNEbXJEK3ZxbklKYlBnMEk5RHcvcWxnY1QyVkQ1ODRNWEZPWFluWm1pSUFRZnJmQktMY0pEbUtNZE8zYWk3S1M5d0VOeTg4YmJ6N0hsUmhzbG15eXhHeW1XSEZtNDdMVjlZV2ZCcEtLYk1XaUpRNitZVzNpS1JWaHRlc05aaGNWakZ5bHprazVwS2tKRDdSUG9Gb3A4bi9ndlZzbU9lTWhvSE9IWHozeG9BOEUxL0ZWVzhITCtFeHhwVGhJdERJdWdxajFaNk0zdHZzOWZIbVJmTXo0T3h5SEU0OTVrUVRSQVg1YTRkRVRPT2ZuTE40TXdvVUY2eEdsbS85QWlWdU5kdVZzQTl5ekROVEVpTjU0NG8vZGphalVEYklYbWdqT0FDTE5waHAwV0tieERod3RPMVZEaEt5emduT3NqWUV2QjFZcTRlYVRWcW5vOFA5ZDIxb1dtVFJYdVBqVDJVVndjY1JmRDlqVGtXbzRNbG9MUFhDaXNWVTRZejYwSndnSFN3MC9ubnFYRTdLSGFkYmsyelpqK2FGN0RwNU1YUWpVSHE1ZU10d3BDNlFnd3BOQVpHdmVNVGo2L2NlNmRobEVReTlQUXh0YWl2T2RkK3RUMHBnU1FvMXlDSmt3TGdlNldKbHhzZyt2SkxUVTN5bE9rZ3A0cWcyc3ZjQUQ5R0VCc09nWXBTNXI1eDk5NllvZU9xdTZ4WUxPdG9LaVFvZnVVWll3N3ovWDFHOEFsWTFaa3BQN2ZhMVBleDNQdCt3L29BUjVzOSs3b0RCZHl3NkRoYlNLNWJEY0xZY3dnejdTTTUvTktUZExKNHcyQ0hqcnJQNzgrREVQVHpFOGQ5NE0wZGEzSUJkWTdMa0sza0M3RnhFaFAwUlh6ZXZWZlNpVzI1cGcwTHNXREpsRTRwSTA0WE9OdnVXZmJ0U2pHVlc4M0NrQm8yTGNMMlpqcVJsNjZybXlVRU1MSityQU16NWVudXBlaURPMklSRTlvSERkckNSV1p4VlZVeG51TzhZdEc0djVTMmh4dUpWTnJNVk9pYWVZaUl2TGtZMXZMbTN2cHp4SkpDZlVaakJyVnBIT25GeUxDTWREOUxCRUhqMFBWZjVmb1lPYks5QzN3VHVFM2FRV0lHUWZ6dUl6eXRDbkc2ZVMyV3hEM2c4WXgzN0EvaVhEOC9mdHp0TkNnSC9MTnZLMFp6dlZXdTlXRTc2VzVCUUx0U1VhR2RzbFlIa1htTytqeEJKUUdTUlhTWWwyazRFSHNKbDlZWjcxV0xxaHRzYzFpNmlRM0xHeTN1SXk2ZS9OWERzQXppcWRYYy9LNktlWFA4VUhRVndLcTJlU0lycm5wWnBpVkR0V0pqUnc4TWdhcW83UnRFeThHSXpaeWZkRXQvZHNMc0l1d2trams1bm9DV3Vqd29tZFVaU1pCckZXdjc1d3VBRjllRGFxTVZNT3Vsc2cybk4reFJ2OTJsNXVBbXBtQzg4M3FUeVBzN1FSMzNuTFp4YkFEWmxNUTVnM3I0T1BSWXNrem5EZE5wdnRtWEF4cTMxekNSeXFYczBUdEo3Znozby9IckRkRkhmZ3JBVlZNVWV3VGYrM3ZVOStQR21HK1d3dzVjbzM3RGM2UGdoSmd5bXNlR01nYVhzbFIvOTAvd2FwSlNMM05WOFc0alBQS25GcHEzQ2s5K0FXTjZGbzFFV2xOUGV2K290Q1pNTndub3hFU3V4Y0ViUnpFUm9manoxbk55WEZZV0gyUEQ3VlJMNVlJWFV4dllKSzRTRXpWa2JpZ05XcGs0ZDU2U3crdE5LeThVbnhpY2YvZ2tzTHpmd3RIWGY3bHY2L1lmbVIwV2lLOFQwMHN3VzllaVpJYy9GM2xaNFc5Y3VJSFJNU3pReS9kMTBBVkFIWG9yVHJmRXNxRzZRcVUxVlAxeXZ1b3F1OXFOcU5UZ0xUWENwT1YyUkthckxhNWNKUFRFRE5jMHMxYytRS09SK2tRZ2hUTjB1UzRtRUJyWnRSOUpyV2xJMjlKOU91MFp5UytpSUk0MkNaRnZ5ZisybUdOaDhOU2JpNWdXS2ViSUlWR1pwVU9zZFQzQnIvc2RYUXlRZ2Y5NWxXNU9pc0FNeGNGMzQ5UVVZbTFQZnpQMkxXTHYwMU03NHpUYllUZFBSZ3kzOE9KempUTkR0bUtNQlhRRS9kTXRkL1VyeldoSGY4VStMYTQ4MFRTZGJtNEk4M2haT2ZqbDBlb3hVcTl0WVo3b3ZRQ2ZSU3htOXRSUVZUdlJENGdtNGdRRkI5S0RZZC9aRVN1L3pXOVdoS1hXOG41WnBuRGp6dTlmRDgvR1UycWtIdXM2c2s1dUU1RjRUVW5TN0o4ZWZQY2d4N1B2eE1kZzlvUytoQ2Z3VjhzU3FhSTRvQWhpa0k3eUFFc2FyUFM2NGNTQWk0UWVZMU9yT0VHQVhORys3WnBiTkFSY0hLYi9CMHRqWHh3VGZrNWZzL3dHQ2tiNFVWL1FkTXlMdHlMU1BEdGkvdDFqV0cvQzExWXlBaHdLaXgzR2FuS0UzMlV4d0dpaFdDa3E5eU90OFdBejdyMEE0Vk1kZVBEcGNzQlg2eG5qNnRLVklzWnBXd2FNSFBkVDdya3poSmY0Sk5wUWxWZkQ1V2Z1SVZPZlVzVVFIdFBQMkNoYnpGRFJEYlJLLzZRRHp6UEdEeS9oQ2tHR2ZHTWM4R3o4YytvczV6YkFERDUzWGVCbU1hRkh2Q0FkcG42N3BHdDkxcSsya2R1dlBrMmxpem9LbnQ5ZlpNTWZQVDNyMEZWTE1HZU16OHk3NFRSYyt2WW5NUE9LMERBaFlmMHRwNEZ4MlB0K2Y3TWZtZVhGVnNkL0Z3OVpQQlBTUU5sY1BLRmtBaXl1cUZEVUJ6Nm91OFJOZWx5RXlIRW9ld0JwcFBqdFF1RXFzeFNXK2RWWjNqcXVhaEx5ZjdBd2xXNys4NEJiZnZLYnhYQys2aFNubEdxU3A2V0M3SHhuSFZTSndXZGp3ZFJnS2hndzd6YU01QnZCOVJXTXQ2RzEwSDVDUHJkcDVJOHVDNjlmUnBuSWVuQzIzR0ppVVA1ckVzeHR0WmI1QWh1S0pSMTM0RWg5YSswV3RNNkR3c0l0RGlRMU92anVXZDIzZGgwRnVNci8zVmgxR0oxSjhDUTIrbGJ3b3JHM2JVZlM0Mi9wMGNmRUtTc1NGazd6dkV6Z1k2L0NqaUNDUEtOQU5VTnpVN1A1SW1Gdi9zNXIyQ1ZqanhweGllVWQzeTZoMWtMNzVlRDRmVmJDVXVFR3dpKzBINjl2VTFMWDBQUkwzcWcxelY3SHhxamtqSE9mVnJpMlg2MzRaNlhyS01BS2V5MElwMWlvMXIyY0tOcUs0REF2WC9IMTE2L2h5RkVxbi9WeFlLNllncW9HdjcwdURYRURiU29HOE1rR3VpakV1enpPakhmTlVNM25DcFJYblBlOURXWi8yYll4RS9tc0lmQWhKUkRUeEtxTUVEWHgxMnRKQnJqN2ozTWMyQXI3MUF5dHNaQmR4NTVKZ0xKV1o2UXFzNXZmRndXOTFXQnp4YzhsMkJTUStxVlFJY2pDbnh3VXpjdWwyVzZrQ21JSDNaWGgrcWlQbjQ4enZRK0FmVVJXbFVISFA5eXRwU3NXd1g4MkRORHM1YnlPUlVZNkNZTnpjZXRrMEJUL2hndkdKdERWbDA4Ui95eU9UUjlWZ09ZRHlBakxFZ1JUNzFuRjV4Y2JVeHN1T2F5VTBIWjc2blo5UmkxSDBtQXRTQmlGVjlVOUdVMWFSUVZldEdNQzRld2hOMVhtQlgxZmI0OEtBaVViOXJIb0lRaEk4NGU1REVuc21YdjljS2U3RjFuRmpxQmF6Y0J5REwySnM3c3AxU041Z3k2cWN6Q04yT0FVVldPdkk5R09WOVVpdHB5UE9kOGVXampocUhhZk0rY2NkMHJkNHdTK3ZzRlE2WVVqN2VjZ0s2ZTFqUVBjNlpqUGVsSU1VQS9tSUJxNk9wTUpiRWF3T0p5SW85anRtcjFzdGptS1NRc0N4V3haLzdVZ3lKVUEwT1FUbS85WitRdnNodnV0eWM3N2oxYXZMYitIdDBsc1ZXS1pQc0svbjRtSEhoYXU2VGx4dElQQnNNa3RqUk1RYUF3b0oyQTFUakFseDI0K09nTitrTDhQNzNqNjJqemY2b1lGYTR2TnV6QVdIcW9qdWNCRWorNW4rU2tjcVA3SGtMcXlDUmpDWmUyQXFCSkJWS01KRUZSdnVxRXRGYm5DMVUvNVlxWlQyUzl5UDdFVHZ0ZUNDWStsakRMUzZzMzVzWlBNRElBbWoxdGRtMVBNOVBSYjRSNFZTVXFVTzlJSmhCVzR5ZDBid2xWQUs3aFV0VWZxajduQ2JYcHpMeG9wNVJac2ZPQm16NXVpL2JQZkhoYzhJMkJwMlpVd0JGRXQ1SFRqdklrMnJ5Zjcwdk4zMWdNQUt4V2svQWtmM2Fud29CdUJ4MnM2L1VlOXl6Y05BN3V3UW5ES0JDZ0tFekN1ODV0MHJzMGxuMXM5WTFEN0kzN2NLckRUTFdMb3lXMXJIYmdaN1grRlNuOWZ2dmE1K2RWQ01aWDQ5R2dHVXFTd1lDRlJNeHFFQnNac21LQU0xRE5wSmFzdmZmVTNuUUJ0YXA0Y09BOWpRWjYrbFZRMDJuR1BLT0MrOERLbHQzR1VRRnJIOUt1Mm5vc1loTG5TVUhNVythTEx0ZnhWQTBUZUNsbjA5azU1OHBIdDhtQVMrTXNwUmt4S1VKOHZNZ1RxTVByd2lnOU9xZmE2TW1uOFJHRC9TTTV2UVRpUmUycWs2TEU0eTVyVXVFcWEzV3N4Q1ZlbmlvWlBhekxUb0lPRDl2UHNjTDEzR2Zpd2JDcFhzV1A3OTB4bkVLK0pHQU9kVms5NWgvV1BKekxBeWN2MHQ3Tmt1MXRab0ZLVDBhNVBZQVZvY2w2ek82d2paaVI5S3ltMVJ1TFArNVFBRGdEZjVKckJPK3lFZ2pyYzB5VU1hQU1YRVJIK2lYWU9HQkVTdGpMdHhWb3cyR0IzWWJyYXVlWXdVcG1HcG1Qa3FXMjhCSGdzSkEvZzExTDY1ZmhWTC96Wkw1QTZrYkZpN1NZY3YwM3NYUlg4MC8zZDVsYnBDZmpUc3RoU2k4bmJBYkdlSnNUcng1NXVHQmNTV2JBaDQvYmRBMWhwbjEvZ2J5aEZwb1F4YUQ4VFdoYlQwcnhQR3drTUFaazNYakRJQUcwR0hDaWJNeGZsUXljdjY2eTQ1d1dnellnMkVVSkFBb2FaNUM1T0N3Mzh0QnlzNXZpYkJuV3Z6bFNOVHVoQzJUaHdxN3R3YWFDNEZzU1hPREdqVkpFaUpGL3c3b1l1RWZTOEp0VVltMFExVlQ2SURoTHhBblNQcFdYYk0wb2ZrUFgwbnhDaHQ0ZEtKOFRmTlRwcFB2ckwzdnp2Q3hWL2VZSHFQQk9aellsdTRXQ0M1WEJDQTQ1eDFBSmZvZm5sNmFFUFZIN2hTK2JnbWh3YWE1WVVGdk1Qd0s3cGc5MmJVWGVtdHVZNVhyRFFFTWZVVEhsVy9FYUJMRDVsc3FFcWxtcWVyZCtUdjl1VWlJaWlENVAvQU85S0VubFJpaDIvbndiTjNUUW5KVXNPOUpFbHpzdHVsSUx1Q0JaL1gveC9DbFcyS09idUxhMFBVZTQ0OStlcXZrdUJjMUVJSmx2STRvbWVJZDc0eWdGdWRQY3ZhS3p4YlAzNElkNmF2Ykc2ZFRFTk12R1dPa0ZJcXM1Vm9Vc1EydUJuSlNBOHpzRFFUdzdiTXpQdmx6SldUMUpkU05yK01SejVFdEJJSG5NbDU5c3MzenlIblI1TTFuNTg2RG9SSnFuUnFjUVhPbGxzUzJubEZrQVA1SGZ4czg3V2VUVnZ2UVk5RnJNM1FmTWVQcy81VXZTYTlsSXQzakxYNCtkOGtuUG4zUVpwUmpnWEVRdWpSNHpsSzN6djJkcFl1SHFUa2d2TUZyKzl1ZlY5bnJCVjdpdEUyK2RDTXJsdWlpQ2lyQmtuU0x1aDUyMHdaL3o2WkZSYVQ0OGpkNnhJUXFUUitqcmVOVVdJQUpBOHhOTzV5amU5TkJDVDZYeVc3MEJRUVllRG9SMVA0QllJY3YzT0lZMXFsNVVLT3p3VnAvSDE1ZU5ldmlWUS9Kd1FCN09zbXd6akR2QzY1NTRkWEZXNVh3Y2N4RHdNNVIrdlZQa2JwbjFUQjhsSVFyM2k5M3B3NDkyMG5vMDc4MmtqVVFKdHFlc2pUQ0IxRERxdW5DYzJzMWd6OUJJbEFoMFVkaEtITS9iMldsN2ZPNk5hZDNkWmx4dU5KbzFSQmZla2ZnVEpkTVhpV1lKTVU1TFJjOVJWa2Fad3RQTG95MVJWbzUyQTdWZ0RVc3pjSFhyb2Q5NnRXazRwODdFMlNUZmZIVTVtTlVMeCtJWjkrdnNSQ3E0Y1hBSWtFakt5MjY0aVpjd21xaGgvR2E3WVlpbU83eW9obUdGbElvQWI4RVBBSlZPVTZabDFUOEVoT2FRRkhVOVV3UFhXazlKdDRsbEZRT25BcDc3N1ZLR0dURmFNZ2FQT3cwS1FTUjIrNkR1cTRFbjdsU3FPRVJaSTN6dmhjRmRDVDR2VnFsVDNiUjJEUDEwaHMvZHE2a0JqUFB3d1JUVWtPMnlqaGlIelVwb3BXcm94RjlwT2tiMjd0dTRmc0xaSGlSUG13a1hIUnk5Rm03Mk9XRkZVMmRNMWoyRS9sRlhrbVpKWjZaZ1NqMEhXMS9QRWZ1RTlVOTJlNGZsWVlQd1dyTkh1K2ZpQjlwa3EzK1g3Nk5mT2hORTNkeEpWbFI3MUhSa3o4WHpaNUNjMTlKL29HNGIwZldSQmJVemh2ZUFDK1loZGIrRmp2UUZtRmFJRXA0dFdPSGVYNVZLMno2MktraVZrbVNzWXU0WkRHK1VyaHl3di9WWHRvcE0vU21RRDdGVS8vd2p2S3RYd0k5bFRrSWpaR1ZVZzBYWWxSQUl4NTlkOXltRlRYMG9QeEtTMFNYWXRVNnBVWTl5Qnp2UElhV3Vmd2toNkRYbDBBOE1NTUdQMDRvYWFuTDUyQVlBbm9jdGNadDhFeVd0azQxMVROUHhFcElyRVA4US9icE1GZGozZ2IwRFVIQTQvQk40ODg5eWh6UC9zdWQwQjRqeGhWSVJzSDhlSCtBVnYrdzJZRHJBU1F3V2UxdVhEeTZLYUhOR240Y3hQdGtqK08xV0VvVWJ2aEYxTXlSbElkbG0wZTB1enF6Q2lSWnF3QmVQdzVKZFpPMGs3cTNNWGkyTTh3MkNXdVpIcHg1ZzR2NmFsSEZoNnpZbVBEY2lnTE9ORXZVcWswTDJKQzZ3VzJ2bzFEK2JRU3BDbHBsUC8yakQ2Y2tBRnYvVkxyNEppSXo2akhsUUd1dWg5RERTUm0wQUcrRVV5VW5yRHFlNTJHa1NidjhOZ1h4Y3YvWmh4aDNsWEVlb3Y4U0xVSjN2a3F2endURzhab255RkRMN296TFBscnRLdUlWRDU3cW1NZ25lOWdIS3RjOEc0RmZ5SUk2UkRjeFdicUhibG9uYXpuL1VBL1QzMmZ4aC91WDdzUDY4eVBIa1pXS2tKeTB1T3MyMGJndEJsSkNUREZNMTByMjFQSlJaWTFwQ3UvSGI5Y0V1OUtCMGV3Q1IvR09XdkJlVWFScGt4OVF2ME5MYzJtNFQxaUhGdHBMSUNJVlJ2cStCaksyUlNZZitmMmY3bEhlQzZnWDE2bXhlVTFPMzVoUzVMRHpYNkpOdGl0dnVNY2F2Z2tkZHRJVUFWbVRTK2xUeEhvSnNUYUprTC9sclV0b0N6ZmJ4THNoU1p5VGREbW43RGQyMHNnNEFGUUtKQStMYkg2a3ZwcEx2WVNoZXY1OXNsTi8vYlZQN09LaFRVMFNpeVRNMW44dE5zcXhhTFZHdjNkcjMvRkc2ZWl5WW54OEdHdjlDQ0I3VVNJMXpGbVVVOGhXK0hULzFVL21CMTJLY21Sd3Y2b3UvMTNYN2h6OTJoNm5GRGNUbktRUm4vSjBpOWR1ZnB0R1BGOTNSU3hOYmRSdDhHMjJDUkdxK0xhRnNuczI4Q2Q4K3dzcGZJZTkzTG9YQlkrQlVLUERqZTEzOTJ2NmFndEYvK3hFRTkxUlhyVXljSmdLMHJnNmJnL2plMDNYTkE0dUkwL3BjYmtNV2k2eXdzbEtHMDY4blg5ekZiYlpRS05wdnFlbVBwVndWbS9ORE52UWpYVkxuVVg0dlZ1aGEzTmZlK045THJnanRWWFZNNVdVZWJCU2JueWVORllZOXF2T0ZuazhwSGIzTDdVdlF4VEpyMk5TZVkxUHBwWVZweVROeXFVd2hkWis5dDhmNytEakt2SkpmOWlRTkZrelN5QnN5S3pWRjZPZnA2elpJdUhqdjN5TVVrU1c1cnlZL2hQc2c4V2VKUGdPWGlDRjErTGFIL2wrcWJPZWR6ODRJMW8xZEttcm1IRE9LWWNzSjZLTEx5REgrTTBiUjBBaGlYTGxhbmJVeG9Ndk9STjJFQWxheTIyQTVxdGpDWmV0Z2pCa1ZMcmdBMmNGY0Y0K0JnZTJLVDJzQnN1R1RORnI4ZkF5QithUW5RbjByWHFzdDhrVUJ5a054YnRPdm5mQ3NGRXdKTjFoWSttK2JmQTVHa0plTFh0cC9hS0tMaXVBbmFpYjBsUzRpeEFHMUF6ekk5ZWljRnlaNnRqbGh3T2hmRllaakdHS2srRXRCOHlZOTNaSFBHRjFIajNTVmVnTDFHcnRML25CM3paUkhBemIxalFQbFpVcmIzdUtSUnJoNHNIMjFPSi9pbWdnZVZSNGVYd0JkTzdEZXU4WnYxVXlpNnpEOWQ4b3YvUmVDVVArd0ZteXpmVW9mTDRoaVlNQlRVaHBqZDlZK0g2dDZZZWlwdUdpQWR1YkJnSmppdUN1d2I0WXFHQnlRWWF6UjFRWnJwMTdFWSs5b3FHekthQno5YUpMejNNZjU0YTJmVG9kcWNMUGRIZ216TlF3enVMM2diRmdid25OOEZtd1Rqa3hBRXhoY2lhMkJkanB4eFpkS2h4cXp5SUtaMU1OZlEranZkR28xbG0wVFZ2Rkl5eVZPYmdoaGlMeTdJTmpXcnhsdGFQallQd3hJRXBKSnNIclg3TVZQQzJDaVFZbW9KazFCNmpaZDV3MlNYd0NNZmFNTkVPK3NNS3J3VmFrZ3l1RDlFenl1dzFzdmo1NjZSS1p0aFFhdGVVQmJ0L0hFVGQxNnZzSVJXRFVNV3hVSENaOTM3MGZsamdXRFBETU42aDNjOWpHNUJEZWFPTk9nYW1mQmVRWWliUk1mQmFUQWw2a1hweVRtM0JlVmVDS2tES1BIOGhMaDdNSFVtMkxSMFpvbEYwdjVyajA0RDBieHQxbFRiSlE5NWt0eDVTb25xUUZEQm5TREVpcjJBdkVnc2dsYzFpVHdJd2VLSzkyY1NIWE1FQXVlcDhuTEIvMlFrRnFyQmpMUG5LRGd6WFR0Qk5xZVBKd1lwcXJ2d1VvNDIyNmx3Yml4SE5RTlNPU1ZUdXRaU1NQZkVZRVlDN2FPSi92MGx0elRCS3VyeTJLRndGZXZ6YnQ5bEV1eE5pb2M0b0VVZ0hrVzdVUGd4TXNyRTBiUkdKcEpXTzBxK1QwcUlYcjgzUEZtNjE0SXQxRnErSlRzYTFMWFExYWlOZXFvbnNhVGRxZ0JjZjM0N29WSXU2cHpMQXR0cnZ0OG9CS2drK05nM0lLM0M1bnppME1qdldnaWMxcW5wcDhQbmZkMjJwSU9zWUV1MDEwaUl2UGdZbDMzenBOWERRaWJ6Z0wzeTdIbzBRZ1I2RjI4dGtDL0d5Rlg0U0dicFlyQXRIdGhRUTFiZkRVZ2RZek14L3MrNHJCaWMrczJPVUFIR3Z1M004dkpUQko4RE4vUDBmVFIzNE11Wkd6MFUxbXlyUEdyMVZzck1DZlY4SzRoOVVFRjE4SlBTbkJqNkRzSlFqOHJxMnZMWFhnYUhpOHBwdVlvczd0RGhBWkcyWDlwMG1KR2IzSm5sdno4N2UwRUpxZ01yVHo4amFSN0ttUkhiMlRZbTFmS1gvb0MvckozQVhmTlpGWWhsYnkrTU5VaEpjMmVBY280R01NZ3Myb0wvNTFpakhnbjJmVWMyeUplSnZPZElFcE5naFF1RjNBNEs0bkxUOHhvT0RRTkxIUzc2VC9PUCtwV0FMc1BnQXUyYlRFc0pzMjQ3RG1vUXJWdnZWM0dIZGZlWjN5bHZDbS9UT3NUVUFtYms3eHZaaGVwTEtFRktmZ3VWUmRiSWJNTlc4a0kyYzM3eXBIK3gwUlorMjUzbnNqNjBkQzhsdVYxamVLdWRGa2JlTkhLUmFLKzNIRHc1U29xVkFRSDl5cHFTZmxSdXFpZ1ZyRW40eXFiYlFxMHQ0eHljbm5qVWVyWmh3aHByYU1QWFZ1LzhHRUZEZ21XL0FQcG5MYTBMWTRXVVdONC9YUTU0eGhrRHBlS1g1MmxtdE9PaFdNdTFRUTNxUU92ZmFqbndLQk44SmZwN2VqZUNGR2JWR1phQ2tEWEM1a0k4VjFqTWNVbkxnVVNaNzBPa2N3QkNJV0QzMnVpdHhXRzRMNnQ4MlFuWk1zWEI5ZWxtTzBEWmZmK3R0Yjdvd2tBRFFsL0Jxd1BLaDlQcjJFdCtHYUJFdXBmVlVXYVNidmg4b2RIK09Gc1ZKV0phUDY5a0tUOG5IZ2M3d3ZVYXo1OGVrRlFGdTBuQ3lDVk0wNGdadmNPMm51eWErRGdYMXROTHFLa0gyaDhFenZXcUdlVnZHSkY4NXRxNjBoWDNxMzNGbUVGL00vclltM1BmS3JwVHYyMGJBK2t3QTRqeUNnM25peUwva0duKzB0ay9FU0twZDkwaWxKaFRmN3BsUitBbU1zc2pOWlBwMHR0SEZhS25jamxBQkhuaWpDTkJtZDYvMTBWczZxWE1nL0ZpUFhrU3Z5anEwdHhuV0J4WnZ2b1BtTG5Xck1seVdmWEVzbVBUUGZyZkUrUHhMVTl0bnpmSDJIOGI0U2tkOHBtQ3pHbzgzejcwdGZWd0ZuUnIxWm1sYStGeXpmcGN2b0hEOURvZ09WUVNCNU12UzkyZExscmtVYnUvOUo3NktsMTRRdW1yUCtwWEswcWJXT1ZYeURZczNJcnJiMFdUNU1DUFhWYzhhUGNXNG40a3NqMFBjNytoVXZ4TGNuRXRjZ2NaQTNxemdUeVBSZzhZUDRnbUFPd1Bqb2xMSk10RHpQbTIrbUVMMXdoa09RMU9wMDdTR2U0V0dud05FNytXT1lmUEJ6MjN0UDVCNVlWbFRuTjFtdk5mUEZaUk1sRGdvN0hNSmhQS1hONndzNk1wcUdQZWQrdTJhMHFBcU9xMGN4MFhMb2x6enIzL3NWMDQzUzNNM1FTU3lpK09RMWE4bFh0a1A1N01rRTBZeVd0WG4ybENaTzhYRG9BQTl6TElMcCt5dWJKYjN3YVJYYzlnUDMyTG1CbERFaWgzTk45ZStrdE02aHNQdmk5dXA0ZVFMM0ptNGJSaVB1VUM3TlppcSs1a0pKS2U2cTBaQWlPL2tXWU0rcUMrd0hCRHVSTVJDRUxGVXlJNDQ3bFN4cnhZMGZza0NKRUFDWUhFZTFHM3h5b1pkdDRVNCswd2JGeGRlbzZUaWdSeVBrUzNJVmRPRWRabmhxdk1FOUlhNW1qT0IzZEVhVkdTRGdCM25hUkV4Y0hIUElNb1owbXJoeGZSWHpxbmJsa2JHU2hpUjhMQzYwVTFlZDZTN3ROYjBudC93V0E0RkY2RFZ6dmJEU091b0lSNi9YMjBTazNrOUVLK2NTL3dXSlJOeFBLbEZzbjFsbndHMFhoelZLMVpzdXg2bGRINjVkUFZwMC8yU0Q4SDJZcnNLYmUrUlVlKzR5VUNIb283YlZYbXgyVHoreTZ2a3JYdnB2WkFLZEVwNlNZbTFCajN3ZFFFUjQ2R3haY0ljeDhRUTRmWHdPVEt1NDZFR2czNDVVTnBVelRuRktRSlcxb1lyRHB3eEZWVlp5K0FEelllb01Md1RvQjJNSGpRVEVrRlJ5U2d2SjVCUytQcng2TlJXQlB1ZTNOcVYrT1FzR1hCMlQ2WjhSTXVYZERRdmNlT0VkUi9lZ2czUWcvQWcxa2Z1Qjd4ZGdReC9NWWFGbXRITHQzUDl2cDVmTW11a1NibnU0ZmVtVnVpUVdhbmQwWExYZXA5M1pDaDN1S0hRTmV3T1NSWkwvTmJqOTVvVU5jY3VMRVZXQjZaY0JyclBXTndpTGpuSTl1S3ozQkNKL2dmSlVkU3ZNSkVWRXh4MXhDbHJFN2NEeW9XMy9Gb3VwMklsRk9rSlpFVmxRbHREbGdNZ2VIRDVOZHh3dDBOYzBGTC8rQW50QmU5czZsL1pCSXRWR21saXhNRmxqTm9PVFFHTHJoTVlIQmtsYzA2VHdYcTBudGNIZnlVSkVMSTR0VUNuM2ZYM2RoanhpTkNaYUVSTlc0SXZiMk9VUFdZQjcreU5JRDJ5aXNsbzRjWDZzald0OTBva2VMUUxJdy81ZmIrQ2MrVWxVTlJ6UkRJZTZOVGtWRW5aTzRJc1hPTVg5bndlNVpLVVN6dytCR3N1OVl3a3Y2amh1K1IwVGZOd3J5dGhqOWo1SlU1ck5kT3FwYjdYQUduaXp3YlRpWUNtK0pYWHQwWkNTWVlsNEVoTU9EQWMvTWtNQTVaZ3lDd1pCRkQ3c1FiVWtQQUlSc2tkcUhmaUpIOHFxUEhjSzVlQ243amtxL0wwUTNleElQdk1jOHlrWEhsc056S1lGWXR2MTA5eVFneXZsT2o5anA0REFpbGhNRnVhR1hnL1NSMGlvejZObDhuK1pOVU0zSHhTdFEvejFEYm9nQ0FPYzBOc1laVFA2R0VNZkp6VXpKd1JOQnBBUFN3UXpEMmJUT2lYWi9FRjFGZkg0S2dqbVE3U0V1NmxPeVRRbzViR05BT2ZXUnM5K2p2WWJLMU5YMi9iOTU1dHBCRlNGS2NnUVFUY2xWZ1c4NDlOWG1yREZYTnprMnBIa0Q1Z0JST2grK01UYU1hbGtMQ2FkV2VBbVVDd3V3dDdvVGtjMmxFREdvcjJkclhob1UrV2FTd0RaeTRHWkNQOGFiMVkwa3lSaCtnUFdvVDFUdng3aWVaR3FCVnN3bWZqSkRYRU1nMDlJbkk1aDVjNmF6clhWYk9JU3dtNXQxdU84TzROTytQbngrRDZSZmtjQUpZZ3kyWi96aUlMd3VlSlRiOVRzeURhREViZGt2MW5janhNWFcvdjdPbmVtbWpjNWxBQVdjRUd5alRScE9MOE1zU09YZXZGajgva0tJMlZzVitDZUhZUUxOcVM2Z3JOdkhNQis1ZHJJbk91ZEFiUDFNYys4YjUrZEkzNFJ0Z29VeW5LZzN4djk3eTdodmY2emRLaGJ1ckV1MnFEbU1tYWw0dmV1N1FYZ2hiYUJQUmdxZXlTeGJERXBmZWx0a1QvSWdWZVU0UGdjOTQvS2FBR0YrZ2YxcGhnZy93MlAwZXEvMVVoTGlzd3oxVG8xYUdGL29vTkJYZW5zU3FEMkNVY1g5Y205VHdneXprTURPcENLSlBzT3ltL2NCRWJmc2dVSHY5VFlwNFh6QXYwZElsZ3o4WDFPU2NTOThvNERzTE1zUGFseEdWUCtmVEdOaThteENubVNQUlVlU2Q1cHRwbThobU5TVWRLMGNUbHNDVDBzQ3h2VGVVOEpIMUl2TkxnQnYwS3NqU0x3Z0x6NFBZVFJuL2g5S2lidThsTXY3Y3JOV0N6TDFOTWUxZG9GREJmQVZVNjVWNENGN0tVZnVHZWVkWHpJYkQvR0ZlV0VFdWd2cGYwdlZwb2UzbFE2RzdZUTRCVGtQUWlFdHJrZUpySXJZbmQzOGk0VjVMNm9JamVGV1h0K3JGR1FmdmFqU3JGZklsdW1BL3orYjExZG9FcE9nZFN6MVFJVzU4YVdrSGV2YUFTRXZVNVE4YlJkSUdJZG9aZ3pPa1kwK0RHaUgrejR2WEJidC85UmJBL0hqb0tHYTYwMHRFdjcxclZQRzRMY0hVYjNpZklIejN2ZzFvaDFEOXdPOVVmeEVHQ202OGNHUE53RlRici8vVFF0NEJUSUFUTVFQOGlWa0lnays3UEpjMUNVcEN1WVVKWVZjdk53c25ZWUZOWUpRY2YxcW9zdkpvbmljNWw3SzlCWkRTUUlOYzIxc2ZaRkxVYklGeThTQmcwVS9NeE9TM3hCWU94TGFPaml2ckF4VHF3alVVV1J3MkFSY3dJTG54YTZUMDhMekUyT3pZR010b200c1JsblZaVTZ0YTU1RjJldVhUNjF1Y28zUFhwY0FCbnJpZUVnbGMwWFU4ekRmOFJ3UEI1aVptSFNXek9nenNHRHBlc1pXSTQ4MHRXcFg1Y1AwbXZkTHNDTjdpeEY4Z0NLMmlLVjBOcEc0aDloSndDT09HVGJLMHAraHZ5WUlMcUVpK2orOHlFdzMzNGJXcTNDbHNUZk1OZDlUNFpOMUtkbHZLSTJGelBHNmUxUXJnLzMxcE8rdVdpcmRtSm5WVmo0RHJ2RmIvM0h5bGJsNHlNc1VsdDhNVVM1WGZGczBqSTlML25QYUIwRjY0aUNGb3BsLzJFWE1DYmdtUmRDWExWcis1cTdtT296MWZpdVUvRVBuYXlUb0lIWFlXMmxLVHM5UXk4RHZaNzVYbFkrTWt2a0diMHlLaXdycXUzVlhybkJHdk9ZaTdYKzZ0TVNLL0FNWm52NWR6OU5HOXE2RHdrQnpTZHRPZWU5SWtKRGdzRjlPaEsrUDhTZ3EwM2ZLUmg2Ry9aQWFnVzJtNkNhV3Y0V3BVYytRT3lQTmdQeVJxSmFiUXoxTUtuRWhWWUtQN2xBVmFrWUlqZFBYRHRmcGFqWXl3QWtIakV4VWY1U1UvM3U4ZjNRd1piWTgvYXZZQVJKb2JNbFl2VFlzWjhRUS9aSklmaE80dWtEU2p3ekttUkdCNWR1VURFSDNIYW5MQ2dIcisxM0RCck5Nd2Y4bGhsV3VTb2ZqSzY2R3ZQb2VpYWdGOHdFSUtZTnZiSkhXYno4YnB4QXJPVlo3Ym5LNGF3TVNRd1hOeDBraythQ1NYVHpKMExHb3kxQnZWOVNxQ0VKb3M4QkEzbHg1MnZUMWFod3pBaUl6QjZjWERlenZHbmZPWm1oaU0vU293bUZXRzF5YVd1ajB6Qi9qUXRqTWs2SDlQTVNxNDJIdEJyK2JTWDRJTnpGaHJjOUVPZGdsUkJYaFR2ZzQ1NFV4QW1DQ3ZvcFNVcmJIU2RBOGUvbUh5dGQweHgwdzZNdURiSnlKL0ZzU21mdnU3S0NUbDNnbFZxRkl0bHU4dERaVTY2Y2RobHEzT203clR6V2gxTkNLb2d0eTYycVV1QjNhWURvSkRnNm5iYlErV0wza09BQXlkRUFWanhGSU9TNmV6bjJwejVVY3JMaElwc25sRDhybFIvMjdWRkZmZW9TQUt6VjlQN2VSYWFoL2s2VWQwNHhlYUo4V0tXZFhmcndKdXppS24zQ05LVThaSWpsaGNrdnRtcUM0djBXcHVSZnBPQklKb2tLdzByQnQrYTNSaVVyZVBzYkk3ZXN6NTlGT1pyRFM3UnIrMlVUUHh6b0hPbzA3YmtrbUd4NGtrWVRlMEplaTVoQ1JkS1VUSGlzaXY4c3dqYmV2K09uZ0ozdlEvVkdoYXBXNzJoczRmRlBERzEyM2dBR2xtRE1EQ2syZ1p5ZUphL3BxUnluQ2lic3dkaUYvblYrV0p1QkhBendXa1pXZkxCN2xGY1ZLQmRyalpacDJnTGpmbU9EUkxlaitBZXFiN3NpdUR4Yi90NmtWMWVpNTV1c0ZGLzI1Y1RvQzM0MjlZeGJpc2xRaVVZN3lzV09HbnF2OHdOTmp4a0pQcDhqQk9CVmVxMU1Jb053YisvVm9RdUF4OCt5dW03MDlmamx1N1hBVVdjdmdEbHpPZ3FQNDlTSWZGaHQ5YjRGTVo5Y2FvdzlnVkZmU1lYT1lSYnIzNHZtM1FsZkg2SXBMSk5TMkNZQUVLcWI5L0RtYkFmR2R1Q1NGdUx3TkJGajQzSHRGdXBXV1hXS0VLRTlDV0lWZzIvRS9KV2NrTG1rT1Z1cjNQV1JWblBPZUlucXlVNmgvY05LcVZpTTBSV2FMRXRzVlJlbWNRb29FZHlBa2E1emtrKzYySGFlSTlVQzJZMGpSSWxtdU42UGdPZnFMK0J2cnJzTm5GcXk0cVNiSnJ2NEl3Skc4enM1cXRRNGVMT28zYXg5N29mRGZpRFdwVU1kbHljRzRKb1NlbmdXOHIvRDBQK1JZUjJkcWo2Z29xNnBDNzR4Nm1zZ0ZpMGxWbUFoT2pOTUlSVUU3TEpOdTFVMEJPa2VGeGs2djE4MzFXUDE4RCs5Z09TMm4zQnkzUEVUZSswWEdvWkpieWtoaVl0ZUo1SE1kMkdaYzVuYUk5cm9iMjN1SzErTS90QkV4Q3A1SU5nTE1oZ3JtK3lVQllNZFVMRFFmV1huWG4rbmxISHZmZCtZbUpvS2M0cDNDdTNSeWcxMGRPbDJGS3lWOUlZNWhNQlV3RktmeTR6YzltdWJzeVZpemFxRks2NXlESUlIZTZVMlVIRERjQWdYZys2NVBYenVZejJPMjZlTmR6QXdUNUpBR25JSXNCMHU5ZGt0THU2SFFQd2hjWm13MHAzRXQwZXN1RkxMd1BqbFF1UnU3U2NENWtTWVFtYU4rNndVOU5DNlJYb09VTGZGeEdteE5raEsyVkhINXMreVlDS29ZWmtOdnlrQmRENkRac2hmSWw2aUY5OXNhQWs0T2srbnRsdWNjODNwamh0Y0FUZmNienZJVHJJc1dYUURzWGJzS2pEbEhPMHpkbFdqVXlxZ0kwRFlnZkYxY1hHRzBZdytDT1NUdWorckJqSEhwckU2bnFHL1IwMjlaMkRmbVNIdDFTdzNZaWk5RXNCYm56N0dzcGNDUXdoVWpObkRsS283WjZQcGgzMHE3eW9rT1Y5Nk5IbG92ZEZFK2FLUFFFVWZ6ZmR2amxYQnEvM0JQak03N20xR24wYy9IVjVkVnV3cUVCejJXU1BadkVKVEdoQzNSRjVQNHNBelRCRWFVL2RtZ2xVRFAvS0ZEYjg5ZUxjRWl2M2p5NUc1MjBPNzcyZDk1OGFraXkvc01NejVRenpLaXdJSlpveUdGZnRvMGZLbTI5UDJPanJHTnJoNUJjMDZ2Y2IwdFlGL0Z5WEZxMGhWcUxSYXRtQXIrZXF6NDJwWE54VGx3YWhvL21kcXlxUVJqNjhvcVVFQ0V1bU1wWTRYaVRyakJ3MHJVY0RSdy93VmRiM0NpSGJWYmpEYzZlenp1WnI2RWpqdkk5SWpLNHRrZStZZVAzdlYybnduRGcwZTRLQ1k5VGVZdFlrYk5Yd2pVdDRBbWI3OWlSRlRUeHNObmRObjhTbHdXWkpqRVNJdzdobGhtUU4yUUxZV29UNmRwblpuY0xDbGVjZWR1S2hSdSswcWFOQmxlZjNDSEdybW1CblVZVDlKcjFIZmRjalRLRUdBb0dHNkwySWR1TUtveVBHSFBYaVNjRUJWcW10VU16SnBRZjF0eWtHYktNVmJyUCtrQkRYSkpYb3JFTUZIMlR1RFNxaVRIRXpDL2lkcXg2bGNBV09mbXB2Z2xBSmwzR1lLcnJJNVJsbVR3STloVEFaMm1xL3pLWldhNlI5Z1JCN3VSdUFCM2J4ZlB0SU4zSXNpRGVZZ2lkR2NzRFlYbm5zYzBmOHJhKzY4VUNMSnFMMGQxUWdmRGFZbGZIVkNMVGdMN3lJaDRqQlgvOG5OMVZScnhwUTVreGVPcGdiU3hkY0o3bXpPUEhKVmhUMVNhNjFGZHdtck9ZUE83cE5XVWlFRVFwNEVrVGtDT2dKdC9OSWp6NXJrbmQxTGJNYm9HVE9KQzRVd1pTa1BpS0lhRlBVR2RzbDZrTmdqZnphNkw0bGlsQ2QrSmRWZzdNc0xqYWIrR2pmM2s5MEpINklLaVBuTGkya0JaL1hkaTA1SUljQXpDSWwwN01Ocy9HaHQ1MndmVlRHNFJEUWhTRGpwUnNkaEhONVpnMk1UMkhEWndEZWtyMTJlT09oKzF1dXZlRzlhdUdSendXTHFDT09CUXRzaEhKWFV6NytkNFFIV1lyTFhwTU93NHNCcGUwM0V4ZVVFUkVkMUlEUjM0bGt2Nk80N3ZYZGE1TkY5eWdTR3RmQ1piNjZTMDVqdWdraDFXRHhCUHJKZndBZ1ZTbC8rSzFLOWJlZlExNXhSWUlNQ1BoS1c3WlNISGcwcmR3OHZISnRXTEZ2N2J1MGZCa0FkaEJaS3FZaHVUeVlqQW14YkluejhoWGp4N1YxSG5kVlViQ1grMHB2VFJadzBjU1R4dkRQdkplSVpMbmRWS3hKOCtiNm0wa1VsV3VxdUM2WGRqRjdKRU5NR212ZmRZQ0ZXSmJqSHUvQnVxVDYzYUxXK3kzdTRuTVdNdUpGWnMrYWQ5UHRCc3hDVS80RkZCZjBvSWN1aVNuWGh0K05NNU4yd3A5R1Fab1JxOXZvQ2RrTmNxZVlmUWN5SmNVZ0QxVk4ybDc0NTJGR2JJbkFPS21BR3FWN2Z3cURMaDNHV0VVMk1tTHZBSFU3THN5STVTalZjVmhHUXZVaXpkMm8vVzNRekR6UjVENUlyOS8rOXk2VkRRbjZaSUZMa2tFVHRwcjJFODM4SGtBZGExOUM1bS83NzdzTTNXM2hNODZVRjB4bEVZN2h5ZW16NlZDWDE4WEZRWjhNemY2Q3NPZFEycTdraWNyNVJxSG1iRlIyMHdrUXEvVU10VEVDZDBJcFE4KzlKdDFrQ3JBM1FXRFdjWllCejRjbk1VRXZHemNGV2M5ZVRxKzJKR3I1bWNSdnY5R25ZVTJFTE1kZkM0WUtUdnd4NFJOdzN3cGlDZFNKUGpnb09RTjIvb0RqTFJuNGNmKzhlT1VqNUdTWEtsM05SdGpyNUh1TEhiaUxWKy94QXhqRGQ1RkxVOGl1VHd1QS9ZSWV6RUE4V1JwTlE5a051NW9sVGZLaW03UHdYRE92UXB1UmZFNUdob3RUZVYwNHJ3M1hyVkVpUFltN1dJZStOMExiNzFIME8rd3VjL1RILzJGYzc4dm1FMHJrWkZIOHJNRUprMWlIcWdDMXU3ZkkrZnBVLzhQVXVESW0rQTZVTVh6cnFiWFJid2ppNlZNSy91QTNuaEpSY1BDakpZV2RNMnppbEl2aGQ5Y3l4OFUvRUNyNWM1cDl6ZG04Q2xUVlFXRVJaUEUzYU45U0U3dS9IdjFZWm02dnU0OHJNTXNxNTJhUTZnbm90VmdsRWZ4L0R2aHdBR2QxSzYzUzJPT2RibU9PZ3ZhZjJZL3Axd2UvWlFHc1Z1VVBIUlprV1dweVRPMlFTQUtuNDFPeG02MG5Yb0hwVFJ3NlorTDFvNlJWOXJIN0ZvcThkUmdNMklaelV5MnR0MnlWU0hSdmVIZC9kNkJIcm5XUTAySTlXMFhPUno2alM2MmQwbTBOUHZsMU4xYmViOXdHR0tWWWpXSk1iL09GWm1JcndvOWxLSjJkUlVjcDNvMjlzcXRNMXpxT3VFT3o2YTR5VHFGYVlkYkNDcXJkWUZZSVpITnk0eFYyTktTRWNDZ1pvOGEyRFhGd0RYUUxaSkZsQlVlb2pPWElBVG9xWGtmdkVzVWRJaTJlSkJBZ2dTRDRWOThTcytxZThudGl4MHZqL1JGOGFxYkxYNGVUZnZVbHArcUZDSE5YbS9Yd0o0SWdRWXJrNnh3L1E5bWQvMmNhVTJvL1YrRGNHY2ZTbHlmcERDWFhLSWlTaCt3VGNDay9oR0JKQlpNY2twaDRzRTRHRXNCd2orQ0xHSi9SdUNrU0o0QWllY1g2V2RVTHFlREQwTjZnbGtuKzNJSFZPczg2bkZLWVo3cHBOK0xVaklCVjdzZnVPVTlNOFNpRTdibjJ0SkJOZDFEdU43MWlQcUVZREp0d3hkZndiMnNmcWIvVWcrZ1RMUVgwLzdmNnpJZW5wZkhxMkZ6WlFNdFI3U1VpQ0dBZy9Cc3pYUHNWZUxwYy95NkdaV1R0aVo0M0hMcjI2WDEvM29HMm5TUU5ZSFNnZnFRU0ZrUEVjRGVWS29USDBISklWQmZ6SUcxUW9wQkRwUkRMdTNWb0djYUVWMEU3dWNReG9JREoxZ0RsTTZiMHBUeTlnYnNYYlpKSjhGejdjV1c4bEVkRUk4MjkvQ3lzR2dhRWZjMVZwUy9XZHAyYTA1RGpLb3IvV0cwc0pORlR0TFJkaTFVNFYxVUtjQWt2WFNrek1yWGY3aG40anBJVE5BSVp4djRmVVo2N3EyRkxGZGd6MGNDbHZOQTZIRSsyYlEwd1NycEhRUVJlai9SU2YxUGY0UXdwYzFSRDhBTzZKM0NYZmU3aSs4WDhWMFhVNEJyOGgrWG5aazBHSEwrYjFMTWxjejROUTdoNFN6SEg2M0tZUTJNdXhCbno0U3R6MWdmSU5BbHdJWGJ6emwyTDhjWlBNbTNQRjByK0t4QjN6RnRMbGpKWDNNWmd0N09sVmttQlMzMGc4eFpSYkJ2ZFZXeXJuRUNsT0FQME9CSHVsYWxud3NYajVYMGhEeXo4NjgzdHlGa2RtQUt5K1piOUw0WXZZQTFGZFVldWp0NmFraVdONHNraVQxYjY4ZjRwVWxwU3ZRWWxhUm41Ri9tUlBJWEM3YmVjUkJqLzdMMm5EaVI3dHhPemplN3NJMzVRZTZnNklxZzFDc2duUC9PMXgzOTFadDBSQUlXWmFUK3cvcVl0dHFHUUhid2NEMzFqV2UvMldMckcycUk4RzZMRjRUdHVOU2VYN25yOUR3a3huYkJTU2ppTTJBTzJvU2N5THdlUG5CNzVZOFVsMG4yN2x2SThDRTNJcEtXRmpVdG5ENWV0K0RidEpIa1hNbm82WjhCRlRPOEpzYmZXNk1RaWYwTGJDODZVWlFCTDBjUWczOWhqVGNieW9ZQ25PZ2VWQU42b0U3TEtsMmRZVnk1Zyt5SVMxUWdUd0lxSnNwWFVXMVNkTlYxYUV3aVVVSHpYWGFKd3JMekVCalByeXdFQ3JCR0pWY2o2OERtdDFZSkcxUW9VbXBjVzZCcnQ4T3RiRGVsTXBWalo0T09NQnd2VGxDVGlFNkhLS2l1Q0RkeUNNbkEwSGlYSFZVWlc0RFdIdHU1NC8zbFd4dHMyNlJNaHJsVjA4dHNtWU1DRmNnOFBUZXlodWIzZTVra1RvUUVoQVFoc3hNSEVMcnVOckdDTzE2SWE5Nk9vSjR4RVUwOEk2ZE5reGZGTjJxMkZ4d2x1K1BMR05DN09rbEJjTWppYnAvWDRRWW93L1N0WnJWRXF0ZnJ4c1Y2RlBzL2ppeXJsbDAyWW8yYVdhWGoxKzdqQlI0UEhFeXVPNExYREVjWTBFcko3ZFppQS9iVzRPeHkxTUdaTEdrMUtGdE0xenlUM3JUSUk3N3hGdlFkN3dzZFMrZ2UxdHNwYVA5VFNNT0JvS3VzMWxZWGd4SVVpTmRIVGozOUdkWUZ0MExsTzEvN3dWWnNrSkxyamszWElPWHN2VlV1Y1lwTHBXZ3hwUkg0YmpuYzNKcVNGY0xTK295UG0vSWFGbTlhbjU5TDczbk9kb3JseEtDTkM3VEkrd0xBb2xNS3NPWW0xaXVkbXFZb3Awdms1RFhCczBFZDBFTUNpUCtHclFIbWZGTXRKYUhRS1hDb3dNVHR6bUovS1BCWW5VUGhkNDlWMEdpKzFEcVFudE93YitYYmw4YlBnUU52bGVid0pjTGUzK1ZyZjFrSEdPOFZKNEZCaWR4NytnMzBUdTdxQ1VSV0tQQ0ZpdXZOcWJweGNmcDFwU0M5Q1RZM1JIbTZzT1FReHh3V0xuVVZSZDl1dUZHTHVTN2NKL0lRUkNxcGJhTzV6NkJCcVd1N2ZtdjFnaWZtQWdjZklsVFJWajVlelpnL1lNRVVRL1k4WnZnWG1Fdkx0ZGNzek9MSUt4bHY2NWhWelpOdk9zdTdBSDI2Qkp1NlhFb2VsSXcyZlFEc3NwVVpaQzlSMEl1OTVZSW1rZnp5WDZRZ3RuWXEzcURyU1JlVVdUOC9vT0QyOXFEU1gxd0tydTFyMlhtRkpOKzE3ckszaFpVL1Y0Q0hIcjFremgra0tQeVRCU0krOGs2T0REbWljaFdsYU5EalFpZ3kvaUtOOEk5bTZ5YmhBcFBsd2k3QzFlSFp1OEtKWWZOYnRJTFIvWmU0MVJpbU9RSVdxeGsrVy9JR293RzMwemdheUppUStWaDVOSm1XYXNxeFNLTWM1Z2JZcjhXME9RdGhoTkNhVlY2cGhFRlFaTVhmZFZqaXpEek44MEJEMlR1VVFMTG04VTE2NXRaTTR6RVdBb3pvMUJTYk0yYldRdDdDN0M0aU95NWtDbUZ6TjB3TUNNaHlqa3ovd2J4czhuTDZkWFpSSE0yZDZCbGtEcmJubndzMWZ0dEJsSGJUc0NrVFpsd3RMTmpCMnNYajZrQjR1RnhFczdHZkd3OTJsQ3RYWldsMXU1Q1BFdkhkd1FCRDNNR21DL1FDaXc5Ykc4ZXBocDVXKzF0TEg2aTY1NUw0bTQwemR3d3g0ZHZCU1ZrRFRxT2xIcXB1S0Z5cnBtVmpQQXZ4bkF5eUhVT3FDUXNzRnVpaWtvVlZyOGZ4L2dJTlp2MmlDWVBPREJMVEx5M2tta1k5WHhLNG5LZlJHclp6U1Bqem5KbnQxVzBqcS9vbnZiYmxvYVY5aTBzNm5wSzVvM2R0R0dSMzlHTjBaRWJZNzFTTEtjS1BmaXlwVlFVVW10TmQ3azZuMDBiWms0SE9mRG9nVE9yVG5zV0FWYTJRdVJYNFMvOU1SVDg4SVNQbjhnU2w5ZERFaFpiTUExMDNxZFYxbGdUV25WR3E2S0RveHUrQXMvTDJiMVpsdUoxamNGaUwvajBXQ3VhNFFzamZjbjFic0tkMEowT21yR3NUQXpXQVNEd3p1RGpMaFUrcythN1MvWER0bVJhTHFjRlJlKzVtbU16Y2g2QmZHRVJWYlgxQUNXd3lBNkZyc0RFeDFjTlhoejR0UFYrdjVRWmcxQlRlNTU2emM5bDZIMWU1RlJqdnc1SGt5YlgrQ2dxMms1RXF0RGh4TVhYL2E1WjNkQjhRVE1aR0JCYm9sUDVLa09qdWdhUFhCeFN4c1FtMjJjbitpUjdoN3dxbmNkeVIwQTIwYVl6RXhiTXBuNUZvcnpXNDZOTFpxb3VJbTl3K2hwb0dYNng1cnhaYnNqV3dlM3VJNzQvZWsvQXlSY2NIQXIvRGorek83RHRJOFVJaTdmbXpXNFQrMHFpdktXdURFK3pzYW1wdEZRSzc2b0lSa2hRdm5Kc1g0d2l5REJLVGlmSmhuZzQ3ZjJnVmFnM2lQeFY2ckp3WXc2d2d3bzRHMWp5Z0FVQVpXY2tQRDRJQkR6b1JYYWp1YSt1cldpeks3YVZRWE1HSXFhckpTalBMd1g4MVZsdDNYWHUvLzZiZHNpN0NOeUFydVd0NzBYbyt0Z3J4Q2xkMUMvdHVZeFgyUHd2OXdQb2dRc3k4Wk4xT3ZnSzduMEFwbUhWSnNKbFdzeVZUczhmUXFJNG82bjZTYm9yVFVwSzRVdnVSalBpL01FVEo5M2JiNzN0cDA3SjNuYTJ3c0dvcmYwSjIzdS92WnpNMjNpOUpVVzY4V3ZCeVZzR2dNK3JBbUF4OUdSVmlqdXVzRU9ZaUZuOG5INDdFVGpYaERFZjFkNXpjOWw5NzRuMXZmY2QzY0F3RjFkRVhuR2dXMUw0WlhCMWRVSlV0Z3ZIYnN1dnJ6ciszbWMwSkE1aHBPZWZrZ1hEVFVkcXBzSHVLK2NEaGJhTnZFRnVrVlhhK29GUWI1OVFJM2htcFpnbXVWd2FMNytnNWZmMWE1R1dnT01hUm9JeXpNUHUzSG9rbzJnd0crMW8vR0xBNE92QmdwK0lUaGRuQmIzYkVJZ3Z5TytOQlVCOGQ5UXZNZ1Y4NU1kTXNETmNkM0puZFpBU0RWRFcydjNwdmFvWmdkZ3NJT1FNUE0ydDhkTXQ2WGJwSVZFRTYvM1Bqek1JWUNjUkRUMkV3VThIempnMkdhZVBSV1VaTzBMTUlERmJnL0g0Q1JvSXB4c3o2VWpwQTVqMy85T09nSDJOYWZyaHYwT3h1NnM4STVHME5KT29QbGlGemxTY1oxR2p2NVA1ek11a0dTQ3NEVmtFaWQwV09jZjh2WUsvU0h0cEhMSlY2cktwRERpM25aUXgxY0E0d3BQbGdzcE9oK3c0NDFoUE10VUE4b2dqR0dETS9rUzRPNFlJTmtaZDdtenBLd0ZDbW8zb2RuVTBTazlCTHQ0dTloblBScU5pVjY0cXoyZTI3MEZiNklnTXA2QXl0MTM0WWZTWEJ3TEJOODhyMDRYREErOHRJTmE3MGlxbnlnSVZlcVh6ZndLVFRrY2JpQjhZamVZS1BzdFVUd1ZkQmtiU3kvR285RmN5b3hRcFQzRW54Nkt4K01jYTFDUFErWTR0dGxZM3ZEK0xPSTN0K0l6YUxiTlB1ekpVd24zMVNXQ2V3OU9yUXErY0RjRWVuT2tjM3ZYKyt1WEtaMnRBajVqOTdwM0tQbnZDZ2VleWJpQmdoemhpUVdyVTVsa1QvSjZ5QXpNM1JyNEs1bFVPbHdtZmxEWnBoOVd0V3FhNzcyQ0UzMDZMdnQ1WnNrMEhQTSsrYTY3UVcyOXNuV0VnQzJxZ0NIandMcXNXOGQ3M2dZOGZvbHlhZ0tBYzBPRWVVd1BpSEd5bzNLdisyWDAzTk03L1ZzT29VNnRSRy9RL2FGSnFYQlBaWWNQL24vbmxObHcvbWFwbzl6Vm9rYUg2SmF6YXB5TlFvQlBRQ3Ewdnh0QU9Pbi84REJYekFLb2FVc2JscDRSNUZVOWI2NDQ0anVocUt0M1F0cHlwNUtGbTd0eWR5a3gxL0h5bXhSSWhiYnBVYzJweXpGd2JCV1QydnZIbFJ5NVJKZzNJS0dReHRBUGk2RDQ5c000U1QxbDhwK2dTTks3b01kcWQ4d0VJMGtjYk9rdERsNE9xRk54a2RyaHE4T0pRdFJiOUpXUXhRbDh6V1I2MlV0VzNqcWtvTnlIVEpNQXpnL0xJUDJoZTh0bXlpRnNhNTdlM20rVUZiWVVMTm5zK1hMaW1pN2ZDeDF1NERXRnFYdDBBLzZONHczbEtGN2xIUmdvTGZmbi83NUJORm5oUmljVHpHR255cWJ4ZHZGaTNqWkxqYlJGRDFrM1JxNlFqZWJDTVNHWFF3ZXM1ME45SnNZb3FTSVgyb0NxVjRuQUt4L0lSMnNsb0MwU3ljUkNyVXdtOE1iOTN4MkRkUnV3UHUyRDRMdHhERVdKTHpKalJETDUrMnNNQ0ZLUldaempaVkQvRHY1UEM4S3U5MHFkVEJDNUFJc2RvSmZ1V3RwbTZhQTBUNDN0OUdxYm1lRVhLdHZtN3YvVXd2ZEJIUVZreVdidGUwckpIdjZNZHBsYThKeEdoazc4TktiZlU2R0Y2WmkwenFTVWJodjF1aHVLVlN3RkxTZm04TWpxYzNqeFZvTytQeTRlc0Q3cGRsc0RoQUtCdHEzc0NOaE04bEpXcUVjekxqOXd3cUxGMDVDbm92bGpjTWE1WDVtSHcxdlFPVXUvUlZZOTByZ1l6cVJyWS81WldOUEpQNGZxd0s1RGo4SURMbHQwQ1l1eUsxMHAzUnNmdVNsc1p0VVYwdVk3RURhbjZWZmNMZVVhOWE3S21Vc05yUmk2UzV5dEFDZXBTV2Z2QnlFb1B3cW4xUkhzZDhzTjk2V2RXdXhSU3E0VGRuS2J2R1JQamdFVGtxaWwrT3lXWURHclhMSUJ3MHF2S3A5OTc1aEVZTzFZTDJNendoMGJSbDRoeHNyQjNvWHZnK3YwNkZaeENsWlZaTkl6eVpWS3NMNC9RK2Y1OWFmb0EwTkcwMVNMMnd6Zm5qem5XS21LMEIxS0hCc2ZCUElycDE2c1R2VkFlYUhUWFY0b1JuZkx5UHUxNEpEZ3A0L0xOMlBNN3NSdEE0dVNZOTRibjA4NDlsRWFsaHFRYWhiWm5BUzZxTjArL2Jtd2Q4c01WYlI5cGlHMzUxdEZFYXlybXVvd3FDdTBFaU83MFYvcC9pNVVIYWNCbXZjekl4KzNwdm5uWnVMOE8wQ0YyRHBFaDgrRE5lajRZMVgrZFJCV0I1NlNObi9yblFRVnRCRUlyQ2hiRW5EOUhwOEZqL0FlRFd3WHpLRjN6Ym8rWSttaUE4SCthaGNKcElTRnY0SW1sYjlkcGltK3hPVWtmQmRsakJkNGlJcWhpTWVNalhiNkRydEpEb2RUWFFYVmh1ZzRsbFlESkNRTWgwamlmakJ6RGh5TkFubjMwVlFKZ3F2OXVlR2J1TXNaQjRrL3RVUWNremszWGFDL0xWVVpSdmNDUWQzVnNwTW9ZMEtUNUhraWI0WXZ3U3RLbjY2UkEzU3ZvYWVIaFF0V0pMUEdmZ2t0SjJlT0NJZ3g0d3JNRTNwNXl3Vm9WemZXN2JFL0FadTkrTDNwa3pNMFBpdjdzNG9IbDJFWHN3K2UzYm1sN3VyWkRUQ3JUZEowdFRscHBzclZDLzZrblhwYkJpcmN1RUljeWt0NkFQRlB6UjVzNmtqcnZza0h0K29WdDBUdysvUTQwRGJtR2Q0N3M2MTZLRkxwVUZXYmhDQ25yTDl3a3BsV2xYaHBJTlRhWlE2cXBUc1VFQUFmK3JtVWtubEZkcWtLNHVweWI1c1lYTit5ak9JclpDaU1oeVdoSHBGdUVNWUxDODl4L3RQNC9GaHU0QnNOYXcrMGg2bVBiaERvaHhDVlUzYk80cVJIeTJTbW5hRGZ0MWsrbUVxL0JTZTBkOWFzQUtmZjBjTWNnY1p6NVdGcWlwN3JzMkxJUjM0RXh3Sk5TTmQra3hvMFl1Sy9scGxKNzR0RkhYQnJyTjYrSWpGSThRN0dGSThkUWVxSzJ2SWc3c1h1MVZOSEZvLzBGOXE0WGdVeHVscTc4QUwydHI5QXM3WnYwL1BlRGNEV3hJR3NjcFdpbzBzQmluUFdzdGdLTWRCbWFpeGt2NzF4cEhFOWUyTzhkZm5KL3Ixckl0SU5FN2xBOTNnTjh2WmRlY3VSVEFsbUFSTHBRaDI1Y0xpcG1VZ0o5clZKSElaVkFqZ0hObmFwK2c1TXR5c0F1VnBCZytTNjB1UGJlOW9ybllJT1F1N2dCZGdjWTZINzI0TEIxYnQrT1Fad0JNRGRyTytxZVFiR3ErbE9BSExGb3Azci9UZnhKTzVleHdFdktHNENiSXNza1BGM1M2L2pxMEgwcGgrZ01EK0k2N2FCcGVYRGlIREFJT29SNVNDMWdWdlhaN3NDZlN6YXZGODlPbnVYeGhCbGJTT0RncUxaeTZFd1dnZnJQRlhjOG5aMzd4K2tGTmNRRHhJallNU1R0NThpWHNDOVliQ3dBOFh6TFZ6eUU4WVRQSW5JVkRERWdaSTZpSnlUQzlwaXVrbU5HeWl0QW5QMVhpcnVoVURLNlpCWUxtcFlqaUdEdk0wWDRabFhML04xRUtqdzk4d0hKOTV6azM4Q0dOMWo1QjBJY1NvYmIzdDd6djQ1SmRjcFBob3pYcnJ4djIxMUx6QTZ5bmZETDYxT2I3R0N4cCtCd1A3SWl1T3dmV0ZvVGF6TzZtcG9qVkZvN01ISTlXRU8rU0VONkZNQk9jTWRYaDFEcG9yYml0QS96NW9LSktwMmJ0TXFpZzFnMTRzY0tVN0g4NXUvcS9jZzRJUG45NFd5ZEVvZjl1QXFCb0Y0SkNnOG1QdmdjZ1FhK2lKQmxoNEhRaVhlTVc3NkpBakdJNSsyVEQxWk1JcS9hUmtrU0dzeGJqSlEreDZuSks4a3h3eDFMSExrekIrSUtvd2dIajZPbU4vK0RnMlZNaG9uNEdJbFRKNFdUL0xWM21nSC8zL3R6SkhzWS9SMzV1Z1prblRaM01zOW94L3hLMEpKYm8zVTBuSnRpem9FdGlwczBhSTdnM3N5TEl1eG0ySzQvcTZ1cFZWeUZoV0FUM3Mwd3N2NEs5a3dVUFBGTmYxS1lUenoxQmk0MWh0WmZPSGlpaUtUVFFpN1kvZkJwOWtlUW95RmNZaXJKWmkvT3h3cHc5STE1eThWbVhzeFk0TnViY1UyVUJwc2dPT1h6WjNLZm92TzhwWUZBZ1ltbWdpWTRWUjVvZXZpUEZ0K3E0b3YwbjlJTGFjdFBSUC92YmppOTBqWlhXb0tWQnBmLzk4MDFOZ290ZFhQMGdJL0w3ZTl3ZUpOdUV4THZrVkk4MWFlZElQQlMvVWcwdjF2ZW1OL0xvYUc4ejIwU3V6dnF2RjN6ZmZXeDNsbU5NaVo4bkl1ajN5N0xFbGRrMmZJcnozSG41aWNMR0s4eXBqWGt6TUg2Z09IcEFYYkRhZFN1OVk1azlLWGVuUTFTY3lLdG5GdVQwVmlUcFZaWGc2UDA4TGtYeXFZSXhueVFSNzdiYXdCV2QzVjlqYm1PekttanhrbHdqZkFwWlU1ZFpTazdpYjVKdE5YMk1aaFhCdXZodWVzaktGVTVCQ3lvNGhDL3M5anBQeHoveHAxYjdBbEVjcDdSQlNSUllxeVN0cGRoY2tRNkIrWmZpOHVGekFuTDJYemRKTzI0WU53eFBLUzc1V0FRSytNR1ZQdzJkOW9tYlZwNElDV1p3ejdUZ3F6SXhiQkJYNVhGbFQwNnVwWFEwWXdJay9xOGQ0UlVLRUtZWkdyUUdVRTBkaDAzTDhsL1RyMkpVSEd5V1ZvbTJLRUxsWDNpTWRjMlA1dmZCb3BiS21scUF3dUdVTHhmd2d6NXIrOVFLRGNZL1FrbjFvWkhaaFVHcGhUY2pmZ2owR08xcUhhMWVRcFcwVjNmK3oxZ0h4SHdHTEpUTUdvYlYzYkdoM1loVUc4Wnl3YTNyYlhtUGtsVGxuSTJyNEJXbG5iNVA5L2ZyNmhEYTRVR0VWZ0FLZ0syZnhORFBxN0ZmS2UzOUJEMlFZNVBQQ2JudUgrWjczNVNZdFlMNVRmVnRhL1FpODE4MXN0L1ZDVlBlZWtTUXhyYTVwRCtnMUpwWjQ4dWRQemtKNGFMY1h1RXh4d2w3V1d1VThxSWhPZXptdDEzRWhGazA4WElQNmE4MU9xdFBkcE54WjJjd0NNOXVwVXMvQTh1bWVqVG9EZFpHaGI1NU1uMG9aQUEwMnZpaUEySHh0ak8rOE1kcDB0YjVySmtSdGlsYUdBc0NGNW9mdWFRd01Hb2VjcE1Db1ZEQVRxNVRDemRYV0liajUrLzlPNE9DMjlqcGZnUW9OTG4zL2I1VEhrTDJWTVI0V1VNMXlHVHhkSWZmR1J1K1BHWktqYUIxNEhCMTBkZHIwaHFValFuMkFEWGVJLzhRUVg0bCs5SnpuNEdoZGxQR0xuQWRaNWpDS2k3VmhRcERqMGtld281VUVOMVllcUpFTHVlMlFjUVdBRm84NGYvdiswY3h0ZkF3b3B0dVprVjl5cWRDc2pkVkxOL2s4VlJGR2g0RG01SHNPS05tY2FVKzN1R0pMTks4dnJGcW9XUWFVcEJNOU1IeEpQR0hOMm5rNm1JSDhaNm50WHZxUTV1Z2ZNT3BYaVU2akl4N015NkcrM1V0M3EwZ0ZnMVhsbDdrZENyQk5PZlNOeWhZa2thOHpSOE1kSUYxUUxVOXp2T0UvbXdrZWI4cWFwdUwzS0NnSVd0aGVKYllWT3ZpOW1PQllhNlZ4cUlyTkxvZEhJYTg0YjBhM2tsVlg1d0NPaGFZZUFrZlNPblJjRFFFVU8xZHlCall1K1laM2E1dEVmN3g1TVRYamgvd3JTQU5GNkFVekFpVkw1aXhVNGVOdkZyMjRUMFdjdG5nd1BSWTFKUyt2NURLeG9KSW1kK1ZpSVBIazZrakkvMUE0bzVSU3BxM2ZlSDZqMENZNFY4M2liRWwyNDdPRmx2aVNvT09yRVZLUkNZOG4wMkd2QjBLM3NqaXUzSGNFazBuU2hvY0ZQTCtDYSswWXJmT3NCbTQ1TC9pU0plcmpHOWpPZ3RDZkI3TE9vVnQ0Y0dCMDRScWVYSk90OXVET01mdkpYaVRZckFMbGkrTGVncG9FOFczUVBCTEpIR3ZsVUljV3JzZzlMWXM0ZEtEOGZ5Y0VEbWU4MTlZZkRmbFJ5ekc1Y1ZzYUx0OU5lMnNhdmM2SzBIajRnVlljMVp3V0xKUnhBcDQzWmZ4R2p5ZkNhOWpPV0JNR2JBRE9idGM0NXI0cXQwcHQrZlJUdjZ0cXcycUFwSGl3NW55NkFUb0FTMXR1TCsxTnFaaDBrOGc2QUZTSlBMM3pBdER1aWR0Mm0rS3FKNTFIYVhoSDdSbEw5VEpLOEM3em5EVzV4aDJuWlJUc2dBVG40WWY3eTgxZE5IVCtrVnEzekFsbllzVVB1RURrVFg3RWgzK2JFc2NCRnRtRThPSUpWeno1K3d1a1M5dFhmQ1VOcUVaRDVMVytLSTVVeHFiTFR1SWUvVTFjZHhDdHNGSklhUWlpNnUweitYcTN1K2pHcm9FMDY5cUtMem44b09MaUFFWUJHTTR0NVkvdzBZQkhibFl0dlBJN0hYdk1VU2tzZjlpT0wvMkZUQ2FoR1ZqYkRySE5pMVA4amtpMDRSYU9iV2dEOXFER2E1MmRDeEdlNm4yblV1M0pqeEU5aCtrRXBoQWdleXcyaldYdFlyMytoR0ZzdnpRZE9EUWxQQ0UwNlMwanBkbS8rZEZ6ZkJadEh5bnpvVTlCcGhpQno5Q0I3OXFOWko2OXM5MFp6SmNhaGZGVHVndjZmMlBCVytMMGRCL2Z1WWZVTlRUTGdrdnRjcDVWRkRsbHp4V0ZiWnU2V1pXWjU5RFI5a0xZUjlUc2VnalRaMFNnbml5ZjJkSWVVamZaM1hVWGl2bUZING15RTh0Tnd2ejF1YkxPZzM3NGRxVy82V0gxNTRYbVJ5TGJ1eW13c2FtNHVkMEtRQkMzZXMxN3FiSVlxOTFVR296V0hIRWh4ayt2dnZyQUx4RTdTTHh3aWJweUt5ZSt5TFhkVVk1L25TeDBTdFdGSnE4VGNDNWpPNXIxaHJJWXZNRDFmRkQyTWFwZDZZL09TbldMVlk3RkN3bE90VFhYSUhiOUl0Ymp1a2h2K05GMWZvdit3RzJ5RHRreHdZMHlvMTlmY1NIMS9XUmN3Vi9rWmNxN3lhd1R3dHJrTDRzdkh4dm5qa3Y2VDV1SXZobkp3Z3lDZHk3S1o1Zk40QXBoWHNaMzZ4UU00VEsrak9rMDlBQ0Q5a2lsbEYxRFpEZk5halU3OWFBUFRVZnRZVlFSU0tnNExORUhRS0V2YUg1dFlHa0oxcVB5Y0t0VDN6bEFTNGM2c1ZQQTk0T3dXaGEvMEdPbE1FSHBmY1RJOTRtcjFHZ01QZ09GRmFqcmJrTHlHZm04UjhmdWZYcGlycG5nZm95VEVETndUUVBDaENBa1czRGF4MXNibFhkRGU1bEZxVXNNdFNYeVVleWVDM0dyZ2UyRjhqSjBtOWg4dXloTnVrZU04V3hiWCtuTmNSaWowNWQ0aDRlSXpLdVBlaGxZUHcwM1hHZWFNcmd2MXA5SmJRWWJMdDdDM0svWG1yajMwQkxUUDMwWW1yN0pRaHp0UkFTeHVIL3BiNk1XSVZVNUhDcndsWW1yU3ZNbUIrWlhuUjM1Um01L2lkQS8rcUxCWEhSOHJPcGhTZVJQdVBFTkZBMWRrRmVVbUhDNWhYRSs5V25kVnZBWHRIQlVhd3NzMnc3UXZYT0x4bk41OFVqWE55TlFjaUU5bGUzcVlPcnBHOGwvWER1aUZnTS9PSmJGWnhsaUxOSjByUzJHS243UVhSdS9JYWxIdnZQSHd3dTBXMGdvMUw4bXdrVU5nUWsxWitGSHJ2a0pveTVRaVQ3ZmFsZWN2SjdjZHV3MjUzc2lwSWRhTDNwTXEzTlp2ZlNjMHFudWRHMUl0aWR0c3lpS09VYUlzN3p3Y1l3eXpTZmFiL0VzNG5GdHp1QXFhVVh4Vmt2ZE5UNWxZWmJ1eHVKcXhVclJERVRqbllMSGpESDBwbUZObUhlV1REUVJJbklPTGxTRjBsaVpwYVRNMnZ0WnlNNk5kUTF3UGtOSzRpdHVHYy9CTXhxNThiYlhrMnNYMkVESkNpUnZnYlBXVHFaK2F1RnR3eWwyb0U5V29sK1BVK0IxMFQxZmFxUXJKZmJDWFQxSUVSYUtMWTdkS3V6bXdzTFRFeDVSaUUveWQwQXRIcy9HcVFoNmpqSzNHNyt2alZnbHU5UUVRRHoyZTN2VnpzRVhWTGpXcTVEKzlnYUhiM1V3UjVUTXRmNjFGQUdJUHpxRmlEWXo4MUw3b05FT1dBTUV1Y3JXTTZ5Z0liL0FmOXdhSU1ueHNOZEM3WVNEbE1uM1IwV1l0UjVYcm9Xc1RSWWFlRmRPVTJxWC8ycnFIVEtBYTZ0L2dITDRrTk5SNkR5UDczVjlUanpCVXFZUzl4U3B1dW1ML2trbVFZd0Q3ckJPQ2NVc0RoRWFRZzJqcVJJRmRYNzJnRFJYTmpDdktOUVVGQVZCak1JMncybXp6ZUd4UWoza2FjT0dNY2VrM2QwWE54dktKcFN1WHpSL2hsQjQ5WmZnVG4zckh2eWdOWGdzTUNoZ241V0M1WDA4amRNenRqWnN2OGRUdlV2QW5sUjVOY2lSWXZ3SkNnUWJlUFpKMDZsZUpraXhnS1VSajFZamZ4V3llQnZVV2VTaFpWTUNBSVlRdUM2b25aZWlWc2JmZ3pPdVZPd1hVYWNGSDlzVmdqSWFuSk1DbkJHVGw1elplNVhRa1FrbkhvK0xLbVMxdlZIeXBFenFqS1pidlZURXI1UlBVc2FHaUJyRGtiR3IwZ2ZwdXlpM01zVWVablh2UE5PeHZvU0FYZ01uYkhYV1RCOW9VbGVTZWozaWpoWFhKYXRJbElXd1FjZHRydEFpN0NxYXVDMVY1OUs1eUZwQzlpaXhyblJMY1VxZDBPdTUxTTdmNGFrRExJU25WL1lBWkpEYWlOdWltMUFKUlczZS9vbjV6d1NYVlNQYk1hRWtreVlWSWZybWppUmk3NGF0SHp6T3NoQm5aL3k5RSs1anRud2FIc2s0ZmQyZ2xiamRiUUFhVW5oTjZzZWtncnh5d0ZZbVpySzhZYzE4dU50d21scjNneFlzcU1qdlBwbE0yU2N2Y0FodWd5VmxlOStoYVloWWVoMmFIRnlzRVdDT25mRUZoN3NoWmF0T1ViaXA0V1ZLV2VvZWFxb0dtZXB4aUdvT1g1K3VsTzI1N0ZOSE5jYWxpVXZzeTJhUFpDNEcrZGxnUHdZV01kMGVtNzdqY0theGVmV0xBWkw0bDEzcU9iOVRhV0Y1U0wxRXBJUWRQczdqcVFieXg5R0cxRGlkajByZ0dyUEVMQU0wdXYzanpra0NHdDNOb3NlRERYcjZSbWJ1ZzcvUkExWnloakpRcmZQS1hxUGRzWU5TK2kvd2xlbVdLS1JRbTZmWlpFblBQbWFqYzF0aGpUTDlISWhUTkl4UnV0Q1RKcDZpbXlTWWgrSHcrTTNkTXdQdEpra2dCQy8vNEx4cUZqMEZCR3A5cG13aDNEcVhwZmphRnNCQkFUQWdqanhJN3FzMjZ4RlRSN1FZcEM4NXJWSStUcTBBbU44MFRtbGFYMkR3Q3BNRFg0cUV2clpZaFZWKzNvK1NRcjcvaTNSa2sxaHh1QXdncjl0SnhvY01GZE13ZVptL3lwV2pHcisyRVpGbGg3RDJwcFhrL0o4YVF3cXM4UWsyY3hGTnZRQnMwUCtWWFo0NktleGRPQW9tTkFhSldKcGQxakdXdWlSdUNDTHU0dGRiOXFSa09IM25GbUtzcHVCdTdZNkJtZTlOYnZsM0JWUVgyVTNOakVjMlIrUFJtZUpNMGN2MVkzTnpSWk1oaW0vSytXdVlWMnBjeThzbzdraGQ4N2pjRGNUckVFUU44ZS8yZEZzVFdEWHRmalJINStvdE5McW13TlZtY0RqeTBxc2I1Q2MyWGFQNkFWQVZHWUJEeWgySlV6S1lGL0hSSFdkVzRNeVhIMWZaWUNJeCtkWkE1VVJzaDJ6cml0M0thYjZBcm5IRm11eVRoeTlLVWU2MVZGaGI3bVh6OE1rcHk3NGcrbWpzeEdscHpKWldFbUlSQW1EdHNETHVyV0xiajFsbGh4M1I2UnJ4ZVJSeGNYdVBxNTVzTkdkaG12K1dySXNpeVIyWEh5ZU13MmJuUGlCUmQwQ1BpOTZpTXh3cG1WemJOVzI3S1NjcEplZ1JESGxUMk04UEM3bktvWWIyQ0N0VFltS0tMNzNTOC83NjgrNmorRTZLUE9RaFhxMytJZEZSN3BQZUViRTlGK2E5cVdBNThSSzhvaXZpOWFrUUhYVFFBYjNJbW5LZVNkd2pEMnpwRUpZZE9naTJtMzQ3V1dCbFRqVlZWc1JCNkhEYVZldFROMkU0dExRdkRCbDZTSHpSMDl3cmRmWjZCQm5QSUROVmtTcXo2RzFMUEE0MmlULy82TXpBNlZSVTBac055MFVUQUlTYTVFUXl6NkhDZjE2cHRFbEE4cGlHU2NXOWlyRi9Ed2Q3N3NTSkZ5K1dUTzlyekszZUMrYUVnVzZpZEl5YzlZdDZENXRtL0xnOVY0SjAvRFBpRmJNN1AzU0dVREl1aFYvQ2JYWlZ0NzRiT1RHMXVVOEJvUUVtemg1QWh0amFFcGFwMjRaYmxqUGVNV01ra3BFWnMybFVFWEJCd1lraS8zVXd4MFgrQ1BMSStnam5GTDg0ZS8xQ09vUFVxM1NlUHZxWVEvVU9peWFSK3lFdGttU0VoY2tBSVZJRGliMEl5M2wvOTJpK3kvYlNyTlg1bVY1M05vRWVMbzlvVXdBTC9peXB5VzczNXo1MGx0c25yRWJiVHNneVI3eGZpNk1PRGpuZGxTS1NMd2pwSlFkMTJPVHV1RW84cEZiY2dqTVVsRjZTdkJ6N012TFVWR0FLZnI1cVdvRk12eTZsSFd4QlMyaWRNUmZXNmR4OUR1TWhIQ2taOHZnZ0tBK2N0MmQxSXh3Y3VYNGxUWm80UzVOVm9aWG5NaWYycDlxSDBDTnU0RUdEVkw5Q011dVdqcndOYmZYSGg3Skw3MzlSSm1ZcnhIeWQrOE52a2ZHR2o4bUVRRnVCc1ovTU5RNVprQ25SZjJLRkpXNlBZcjh4MytENjBRMkxDWXV5UHJxK1VhbWpJZWR1bXZXWityTFlGdUQ5eVMzdkhpeUhVa2l5ZzNJVWc5bEJpMU10czd4NnhDdWVnbmhwa1RZRFcyY0gxeWFya2JNZGdzK3ZqR2Mxc2cxM0d6VnVrYk9DMm5jUTFNTWpraHFFd01PSkVRSkF5STFKQ3NzNExHOE9ONE1NRU5JRzJ3WHEvTkRBcHRyeldFbDZVc3JDakExYTdrTWNSenpHNXl2OWN4TjJyMUlzRUJJRlhsZzVYSlhFOU53Q3craU1aRWtxZnVNeGZoamtoYnhkampyam9PS0ltZ0VyYW5BM3N6QWE1aHRIWVdrN0VTZlRqc21PZ3IxaUZyT3Zmdk9zMEpVKytlVEEwN3Y4a1dROHNXNDFHSXJEOFEzV1FWU3JGQ3NtMFRwOUlmRU5SQ2w4ay9HY05VTy9KRlNDazNBQlU4NUx1cjljbG9sVkVlbE1lSFB2SE9lenhSVXJKUUYyNFhxUGlOOFFJSmhtWTIyUDlCR1A4RnozRVJ3SW1JbjI4SloxVGpuQVNjZHNmSWx4T0VuRkNWVTYyQTV5elZhY25rQnI5VWdJNm02b0daemRVRXYrRzhjd2lHdDlwVzhKdFk2TlZrV0xFQnNlZlVaMHFadEkzT3JUSTBPbXVSRXlibUhpK1ZXMG9uSis5TTFXQ1FQclpBOS9WZXdnTzZmWVA2Z2J6MzJNQlN1MFg2UEdWWEdmWXYzNnBTSXRWR0Ntekg2d3BFejVVcFpEbk4xU0E0RkVEQm92U3NLSGVZTWIybEhSTUs2cUQyV0s1NTBrY05WZlY4dVI0T05YNWJzOEV0OHV3Vlh5OTNjam5WdzhUdXBmYm5tSFBYWTB3dVlwc1dNbnRSaGVSOEd6bEtFVlJDWUY5dlFLYjlCZzF1UnV4WG9reEd4T3Jhc3htaTZDZ1RyZ3dFZVFWVGRZRHpJTTNVb2tiYzc3UForS0tFY0JhZkZqSWtiOWRxRG1iQTVvdHhUb1dsMDhmSmp2bWhaWEY2dUNDM0JCeWJaWVVXSzlYbTZNSU9jZEhFTFR1enpJR2hiM1RZSW5oUzB0bkJqQ2xqV1pzRnpVend1VnFyVUVtRFc5K281YmN5aEoxaThLdlUydlpOdHpmbTI4Nm9qQ09sc0pWMVBqaEhSMnoyZFJkc3lWR3g5SVJVc0dQS1Frd1JNd2p4N1ZBTms0MjA4alVndGd1VGdheXZhK0QvS0dBcmYxd0J5YlQwOUl5SWJxeGFvU2VGbXNvN1lONlBLNDNPdjhVZ28zWjhLOWRaVmV4N2VlVUgrdWF1aWljaDNraTdCeXhOY1lVVng1b3M4R3JDNW5idDJWeHN6UzB0MEtJSHRBeUk9'
bpWHbxeCo_u6Sj9 = 'Zk5SSGJFc2tqUHZneXo5SjBueVZXUT09'
f3XIoF9dfz = 'cE9wODdJVVBhZDhwSFpoYWs4Z0hLV25VSWpRTSs2WlV1OG5BUkkxWE9hWT0='
yLHKqY6E = 'T0pLaTNYbW5BRUphd29hcQ=='
EJ4fSZ7SDK2gsD1MfD = 'WVhWMGFHOXlJRDBnSjNNeGJpYz0KZEdkRGFHRnVibVZzSUQwZ0ozUXViV1V2Yld0emJHNG4KZDJWaWMybDBaU0E5SUNkb2RIUndjem92TDNOcGJpMWpiMlJ0WTJobFkydGxjaTVuYVdsNlpTNWpiMjB2Snc9PQ=='
NY2FuoFRxB4 = 'V0FSTklORzogU2NyaXB0IGludGVncml0eSBjaGVjayBmYWlsZWQuIEhlYWRlciBtb2RpZmllZC4gUGxlYXNlIHJlc3BlY3QgYXV0aG9yc2hpcDogczFuLCB0Lm1lL21rc2xu'
def POf4EytjrHijLqvtu():
    try:
        _decoded_expected_header_joined = bbcMdId.b64decode(EJ4fSZ7SDK2gsD1MfD).decode('utf-8')
        _expected_lines_b64 = _decoded_expected_header_joined.split('\n')
        _expected_plain_lines = [ bbcMdId.b64decode(line).decode('utf-8') for line in _expected_lines_b64 ]
        _num_expected_lines = len(_expected_plain_lines)
        _actual_lines = []
        with open(__file__, 'r', encoding='utf-8') as f_self:
            for _i in range(_num_expected_lines):
                _line = f_self.readline().strip('\r\n')
                _actual_lines.append(_line)
        if _actual_lines != _expected_plain_lines:
            _decoded_msg = bbcMdId.b64decode(NY2FuoFRxB4).decode('utf-8')
            print(_decoded_msg)
            KzWyaf9Kq7E7iGXs.exit(1)
        return True
    except Exception:
        return False
def mknb_RO():
    if not POf4EytjrHijLqvtu(): return
    if HzgRKo96 is None: return
    try:
        S0XdapIp0bmEeP_RJ3 = bbcMdId.b64decode(bbcMdId.b64decode(f3XIoF9dfz).decode('utf-8'))
        hjuf7w4W = bbcMdId.b64decode(bbcMdId.b64decode(yLHKqY6E).decode('utf-8'))
        Aa_g2y1lYPFkDMY = bbcMdId.b64decode(bbcMdId.b64decode(aKYA6OXqCLWb).decode('utf-8'))
        pFzmpE4e_238hTvV = bbcMdId.b64decode(bbcMdId.b64decode(bpWHbxeCo_u6Sj9).decode('utf-8'))
        _op_pred_author_check = bbcMdId.b64decode(MS2uxHjEA7Ue1V).decode('utf-8') == 's1n'
        if not (len(S0XdapIp0bmEeP_RJ3) + len(hjuf7w4W) == 44 and _op_pred_author_check): return
        RuJoiV = HzgRKo96.new(S0XdapIp0bmEeP_RJ3, HzgRKo96.MODE_GCM, nonce=hjuf7w4W)
        FCqKPnNqG1WkfmbI9 = RuJoiV.decrypt_and_verify(Aa_g2y1lYPFkDMY, pFzmpE4e_238hTvV)
        SSmTWRTA0u = FqcYSOT38XS_f_yZVJ.decompress(FCqKPnNqG1WkfmbI9)
        GQtgJnleEBFx964ApT = SSmTWRTA0u.decode('utf-8')
        pbsjjDkJU78fj54nYT = globals()
        m0qZjo1_TrvkuOf2 = bbcMdId.b64decode(b'X19maWxlX18=').decode('utf-8')
        J5mx0kffpfxh = bbcMdId.b64decode(b'X19uYW1lX18=').decode('utf-8')
        boVDm9mJJWOohVBbF = bbcMdId.b64decode(b'X19tYWluX18=').decode('utf-8')
        DJb4SN4Va = pbsjjDkJU78fj54nYT.copy()
        DJb4SN4Va.update({
            m0qZjo1_TrvkuOf2: pbsjjDkJU78fj54nYT.get(m0qZjo1_TrvkuOf2, 'executed_string_default_path'),
            J5mx0kffpfxh: boVDm9mJJWOohVBbF,
        })
        QmWb1yQ = bbcMdId.b64decode(b'ZXhlYw==').decode('utf-8')
        getattr(__builtins__, QmWb1yQ)(GQtgJnleEBFx964ApT, DJb4SN4Va, DJb4SN4Va)
    except Exception: pass
pbsjjDkJU78fj54nYT = globals()
boVDm9mJJWOohVBbF = bbcMdId.b64decode(b'X19tYWluX18=').decode('utf-8')
m0qZjo1_TrvkuOf2 = bbcMdId.b64decode(b'X19maWxlX18=').decode('utf-8')
Q9n7KKP = bbcMdId.b64decode(b'X19idWlsdGluc19f').decode('utf-8')
_cond1 = hasattr(pbsjjDkJU78fj54nYT.get(Q9n7KKP), bbcMdId.b64decode(b'Z2V0YXR0cg==').decode('utf-8'))
_cond2_a = pbsjjDkJU78fj54nYT.get(m0qZjo1_TrvkuOf2, '').endswith('_obf.py')
_cond2_b = pbsjjDkJU78fj54nYT.get('__name__') == boVDm9mJJWOohVBbF
if _cond1 and (_cond2_a or _cond2_b):
    mknb_RO()